message ClientMessage {
    enum Type {
        PING_REQUEST = 0;
        USER_REGISTRATION = 1;
        GAME_START_REQUEST = 2;
    }

    oneof payload {
        PingRequest ping_request = 1;
        UserRegistration user_registration = 2;
        GameStartRequest game_start_request = 3;
    }

    required Type message_type = 15;
}

message PingRequest {
    required int32 challenge = 1;
}

message UserRegistration {
    required string name = 1;
}

message GameStartRequest {
}

message UserAction {
    optional bool left = 1;
    optional bool right = 2;
    optional bool up = 3;
    optional bool down = 4;
    optional bool tap = 5;
}

//////////////////////////////////////////////////////

message ServerMessage {
    enum Type {
        PING_RESPONSE = 0;
        USER_REGISTRATION_ACCEPT = 1;
        GAME_INIT = 2;
        LEVEL_INIT = 3;
        TIMER_UPDATE = 4;
        GAME_START = 5;
        GAME_UPDATE = 6;
        LEVEL_END = 7;
        GAME_END = 8;
    }

    oneof payload {
        PingResponse ping_response = 1;
        UserRegistrationAccept user_registration_accept = 2;
        GameInit game_init = 3;
        LevelInit level_init = 4;
        TimerUpdate timer_update = 5;
        GameStart game_start = 6;
        GameUpdate game_update = 7;
        LevelEnd level_end = 8;
        GameEnd game_end = 9;
    }

    required Type message_type = 15;
}

message PingResponse {
    required int32 challenge = 1;
}

message UserRegistrationAccept {
}

message GameInit {
    required string enemy_name = 1;
}

message LevelInit {
    required int32 level_num = 1;
}

message TimerUpdate {
    required int32 remaining_time_ms = 1;
}

message Position {
    required int32 x = 1;
    required int32 y = 2;
}

message Rect {
    required int32 width = 1;
    required int32 height = 2;
}

message GameStart {
    required Position player_position = 1;
    required Rect player_bat = 2;
    required Position enemy_position = 3;
    required Rect enemy_bat = 4;
    required int32 ball_radius = 5;
    required Position ball_position = 6;
    required Rect game_size = 7;
}

message GameUpdate {
    optional Position player_position = 1;
    optional Position enemy_position = 2;
    optional Position ball_position = 3;
}

message LevelEnd {
    enum Reason {
        WON = 0;
        LOST = 1;
    }

    required Reason reason = 1;
}

message GameEnd{
    enum Reason {
        GAME_COMPLETE = 0;
        CONNECTION_LOST = 1;
    }

    required bool won = 1;
    required Reason reason = 2;
}